// TODO: 
  // - figure out how to get the slug to self reference the title so that it can be referenced in the url instead of the id
  // - slug wouldn't necessarily need to be a value in the schema, I can make that with my toKebabCase function

// NOTES:
  // - use implicit relationships unless it's necessary to store metadata
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                String @id @default(cuid())
  name              String?
  email             String? @unique
  emailVerified     DateTime?
  username          String? @unique
  image             String?
}

model Collection {
  id        String @id @default(cuid())
  title     String @unique
  slug      String 
  posts     Post[]
  products  Product[]
}

model Tag {
  id        String @id @default(cuid())
  name     String @unique
  slug      String 
  posts     Post[]
  products  Product[]
}

model Post {
  id        String @id @default(cuid())
  title     String @unique
  slug      String 
  content   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  collections Collection[]
  tags Tag[]
}

model Product {
  id        String @id @default(cuid())
  name     String @unique
  slug     String
  price     Float
  quantity  Int?
  variants Variant[]
  description   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  collection Collection[]
  tags Tag[]
}

model Variant {
  id    String @id @default(cuid())
  name  String
  slug  String
  quantity Int
  // barcode String @unique
  sizes Size[]
  colors Color[]
  options Option[]
  products Product[]
}

model Size {
  // TODO:
  // - refactor to enable pant size matrix
  id    String @id @default(cuid())
  name  String
  quantity Int
  variants Variant[]
  colors Color[]
  options Option[]
}

model Color {
  id        String @id @default(cuid())
  name  String
  quantity Int
  variants Variant[]
  sizes Size[]
  options Option[]
}

model Option {
  id        String @id @default(cuid())
  name  String
  quantity Int
  variants Variant[]
  sizes Size[]
  colors Color[]
}